{"ast":null,"code":"var _jsxFileName = \"/Users/czr/Documents/dev_/proyectoFianl-LP/proyecto_programacion/src/pantallas/MainScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/material';\nimport Card from '../components/Card';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainScreen = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/feedRecipes');\n        setRecipes(response.data.recipes); // Update state with the fetched recipes\n      } catch (err) {\n        setError('Error fetching recipes');\n        console.error(err);\n      }\n    };\n    fetchRecipes();\n  }, []);\n  const getRandomSize = () => {\n    const sizes = ['large', 'medium', 'small'];\n    return sizes[Math.floor(Math.random() * sizes.length)];\n  };\n  const getRandomImage = () => {\n    return `https://picsum.photos/600/400?random=${Math.floor(Math.random() * 100) + 1}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    style: {\n      overflowY: 'auto',\n      maxHeight: '100%'\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(Card, {\n      title: recipe.Name // Use the Name property from the recipe\n      ,\n      content: recipe.Description // Use the Description property from the recipe\n      ,\n      size: getRandomSize(),\n      image: getRandomImage() // You can change this to use actual recipe images if available\n      ,\n      id: recipe.id\n    }, recipe.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MainScreen, \"ohMqFt/cdTJ3t+pGlBUBekHej2E=\");\n_c = MainScreen;\nexport default MainScreen;\nvar _c;\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"names":["React","useEffect","useState","Box","Card","axios","jsxDEV","_jsxDEV","MainScreen","_s","recipes","setRecipes","error","setError","fetchRecipes","response","get","data","err","console","getRandomSize","sizes","Math","floor","random","length","getRandomImage","p","style","overflowY","maxHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","map","recipe","title","Name","content","Description","size","image","id","_c","$RefreshReg$"],"sources":["/Users/czr/Documents/dev_/proyectoFianl-LP/proyecto_programacion/src/pantallas/MainScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box } from '@mui/material';\nimport Card from '../components/Card';\nimport axios from 'axios';\n\nconst MainScreen = () => {\n  const [recipes, setRecipes] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/feedRecipes');\n        setRecipes(response.data.recipes); // Update state with the fetched recipes\n      } catch (err) {\n        setError('Error fetching recipes');\n        console.error(err);\n      }\n    };\n\n    fetchRecipes();\n  }, []);\n\n  const getRandomSize = () => {\n    const sizes = ['large', 'medium', 'small'];\n    return sizes[Math.floor(Math.random() * sizes.length)];\n  };\n\n  const getRandomImage = () => {\n    return `https://picsum.photos/600/400?random=${Math.floor(Math.random() * 100) + 1}`;\n  };\n\n  return (\n    <Box p={2} style={{ overflowY: 'auto', maxHeight: '100%' }}>\n      {error && <p>{error}</p>}\n      {recipes.map((recipe) => (\n        <Card\n          key={recipe.id}\n          title={recipe.Name} // Use the Name property from the recipe\n          content={recipe.Description} // Use the Description property from the recipe\n          size={getRandomSize()}\n          image={getRandomImage()} // You can change this to use actual recipe images if available\n          id={recipe.id}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default MainScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;QACrEL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACZL,QAAQ,CAAC,wBAAwB,CAAC;QAClCM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACpB;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;IAC1C,OAAOA,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;EACxD,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,OAAO,wCAAwCJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;EACtF,CAAC;EAED,oBACEjB,OAAA,CAACJ,GAAG;IAACwB,CAAC,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,GACxDnB,KAAK,iBAAIL,OAAA;MAAAwB,QAAA,EAAInB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBzB,OAAO,CAAC0B,GAAG,CAAEC,MAAM,iBAClB9B,OAAA,CAACH,IAAI;MAEHkC,KAAK,EAAED,MAAM,CAACE,IAAK,CAAC;MAAA;MACpBC,OAAO,EAAEH,MAAM,CAACI,WAAY,CAAC;MAAA;MAC7BC,IAAI,EAAEtB,aAAa,CAAC,CAAE;MACtBuB,KAAK,EAAEjB,cAAc,CAAC,CAAE,CAAC;MAAA;MACzBkB,EAAE,EAAEP,MAAM,CAACO;IAAG,GALTP,MAAM,CAACO,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMf,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1CID,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}